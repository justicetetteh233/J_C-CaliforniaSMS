# Generated by Django 5.0.2 on 2024-02-25 21:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=200, null=True)),
                ('Teacher_code', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proprietor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=200, null=True)),
                ('otherName', models.CharField(max_length=200, null=True)),
                ('dateOfBirth', models.DateField(null=True)),
                ('age', models.IntegerField(null=True)),
                ('phone', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('residentialAddress', models.CharField(max_length=200, null=True)),
                ('parentName', models.CharField(max_length=200, null=True)),
                ('otherInformation', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PeriodFinanceUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('confirm', models.BooleanField(default=True)),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.paymentperiod')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('schoolMotto', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('residentialAddress', models.CharField(max_length=200, null=True)),
                ('registrationDateOfTheSchool', models.CharField(max_length=200, null=True)),
                ('otherInformation', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('proprietor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.proprietor')),
            ],
        ),
        migrations.AddField(
            model_name='paymentperiod',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.school'),
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('amount', models.FloatField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('paymentIntervals', models.CharField(blank=True, choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly'), ('Termly', 'Termly'), ('Yearly', 'Yearly'), ('Occationally', 'Occationally')], max_length=15, null=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.department')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.school')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.school'),
        ),
        migrations.CreateModel(
            name='ClassLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('course', models.ManyToManyField(to='API.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.department')),
                ('fees', models.ManyToManyField(to='API.fee')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.school')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolCommittees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.school')),
            ],
        ),
        migrations.AddField(
            model_name='fee',
            name='SchoolBodies_that_pay',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.schoolcommittees'),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_registered', models.DateTimeField(auto_now_add=True, null=True)),
                ('surname', models.CharField(max_length=200, null=True)),
                ('otherName', models.CharField(max_length=200, null=True)),
                ('dateOfBirth', models.DateField(max_length=200, null=True)),
                ('school', models.ManyToManyField(to='API.school')),
                ('school_committee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.schoolcommittees')),
            ],
        ),
        migrations.CreateModel(
            name='ClassTeacherMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('classLevel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.classlevel')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.staff')),
            ],
        ),
        migrations.CreateModel(
            name='StaffSalariesPayable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.paymentperiod')),
            ],
        ),
        migrations.CreateModel(
            name='StaffSalaryPaid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(null=True)),
                ('specific_debt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.staffsalariespayable')),
            ],
        ),
        migrations.CreateModel(
            name='StaffWage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(null=True)),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.staff')),
                ('WageType', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.wage')),
            ],
        ),
        migrations.AddField(
            model_name='staffsalariespayable',
            name='debt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.staffwage'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=200, null=True)),
                ('otherName', models.CharField(max_length=200, null=True)),
                ('dateOfBirth', models.DateField(max_length=200, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('mothersName', models.CharField(blank=True, max_length=200, null=True)),
                ('mothersTell', models.CharField(blank=True, max_length=200, null=True)),
                ('fathersName', models.CharField(blank=True, max_length=200, null=True)),
                ('fathersTell', models.CharField(blank=True, max_length=200, null=True)),
                ('guardianName', models.CharField(blank=True, max_length=200, null=True)),
                ('guardianTell', models.CharField(blank=True, max_length=200, null=True)),
                ('relationshipToChild', models.CharField(blank=True, max_length=200, null=True)),
                ('residentialAddress', models.CharField(blank=True, max_length=200, null=True)),
                ('date_registered', models.DateTimeField(auto_now_add=True, null=True)),
                ('previous_school_attended', models.CharField(blank=True, max_length=200, null=True)),
                ('admission_payments', models.FloatField(default=0, null=True)),
                ('balance', models.FloatField(default=0, null=True)),
                ('student_status', models.CharField(blank=True, choices=[('Enrolling', 'Enrolling'), ('Completed', 'Completed'), ('Left', 'Left')], max_length=100, null=True)),
                ('is_observer', models.BooleanField()),
                ('admission_fees_payable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.fee')),
                ('classLevel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.classlevel')),
                ('school_committee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.schoolcommittees')),
            ],
        ),
        migrations.CreateModel(
            name='TermDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_name', models.CharField(blank=True, max_length=200, null=True)),
                ('term_opening_date', models.DateField(auto_now_add=True, null=True)),
                ('term_vacation_date', models.DateField(auto_now_add=True, null=True)),
                ('next_term_reopening_date', models.DateField(auto_now_add=True, null=True)),
                ('term_midterm_date', models.DateField(auto_now_add=True, null=True)),
                ('next_resume_reopening_date', models.DateField(auto_now_add=True, null=True)),
                ('term_number_of_days', models.IntegerField(blank=True, null=True)),
                ('other_term_details', models.CharField(blank=True, max_length=200)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.school')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTerminalReportDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_of_interest', models.CharField(blank=True, max_length=200, null=True)),
                ('conduct', models.CharField(blank=True, max_length=200, null=True)),
                ('special_skill_observed', models.CharField(blank=True, max_length=200, null=True)),
                ('progress_in_reading', models.CharField(blank=True, max_length=200, null=True)),
                ('class_teachers_remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('term_attendance', models.IntegerField(blank=True, null=True)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.student')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.termdetails')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeesPayable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.fee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.student')),
                ('Term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.termdetails')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFeesPaid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('amount', models.FloatField(default=0, null=True)),
                ('feeType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.fee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.termdetails')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='admission_term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='API.termdetails'),
        ),
        migrations.CreateModel(
            name='ObserverAllowances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0, null=True)),
                ('feeType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.fee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.termdetails')),
            ],
        ),
        migrations.CreateModel(
            name='CourseStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_score', models.FloatField(default=0, null=True)),
                ('exams_score', models.FloatField(default=0, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.termdetails')),
            ],
        ),
        migrations.CreateModel(
            name='AllowancesPaidForObserverStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('amount', models.FloatField(default=0, null=True)),
                ('feeType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.fee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.termdetails')),
            ],
        ),
        migrations.AddField(
            model_name='paymentperiod',
            name='wages_to_be_paid',
            field=models.ManyToManyField(to='API.wage'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('userType', models.CharField(choices=[('admin', 'Admin'), ('headmaster', 'Headmaster'), ('proprietor', 'Proprietor')], default='admin', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StaffSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('amount', models.FloatField(null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='proprietor',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
